server:
  port: 8081

spring:
  # DB Connection Info
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ninetofive?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ninetofive
    password: 98765

  # Jpa Setting
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: 
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true
#        show_sql: true  # DB로 날리는 쿼리를 출력합니다. - inhwa

  # jwt setting
  jwt:
    secret:
      access: bucket_access_token
      refresh: bucket_refresh_token
      develop_dummy_1: bmluZXRvZml2ZeyEnOykgO2YuA
      develop_dummy_2: bmluZXRvZml2ZeyLoOywveyXvQ
      develop_dummy_3: bmluZXRvZml2ZeydtOyasOyEsQ
      develop_dummy_4: bmluZXRvZml2ZeydtOybkOyjvA
      develop_dummy_5: bmluZXRvZml2ZeyghOyngO2ZmA
      develop_dummy_6: bmluZXRvZml2ZeyhsOyduO2ZlA

  # Redis setting
  data:
    redis:
      port: 6379
      host: localhost
      address: redis://127.0.0.1:6379
      password: 1234

  # Java Mail Sender Setting
  mail:
    host: smtp.gmail.com
    port: 587
    username: 9to5ggumms@gmail.com
    password: vcla ybsf wsvn ivgf
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Web Address
  web:
    baseUrl: http://localhost:8081

  # Kakao, google oauth
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 29eeda8b3276b5868e20a11f3b77b183
            client-secret: oPY938rjWAqVCJvsWhKo6Uvr7kQziQpC
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:5173
            scope:
              - profile_nickname
              - profile_image
              - account_email
          google:
            client-id: 437109759271-sfaobp93ep5da5dc27srfpq66mc1tdn1.apps.googleusercontent.com
            client-secret: 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
            scope:
              - openid
              - profile
              - email
            redirect-uri: http://localhost:5173
            client-authentication-method: basic
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

# Swagger
springdoc:
  packages-to-scan: com.ggums.ggumtle.controller
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger-ui
    disable-swagger-default-url: true
    display-request-duration: true
    tags-sorter: alpha
    operations-sorter: alpha
    info:
      title: GGUMTLE API Server
      description: GGUMTLE GGUMTLE
      version: 0.0.1

# logging
logging:
  level:
    root: INFO
    web: DEBUG
    com.ggums.ggumtle: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.cors: DEBUG
    org.hibernate.sql: DEBUG
    org.hibernate.type.descriptor.sql: trace
